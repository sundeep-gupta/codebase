#!/usr/bin/env python
# Copyright (C) 2010 McAfee, Inc.  All rights reserved.
# TestcaseID: lsh-1881
# TestcaseDescription: Test the installation using EICAR.com test virus

import sys
import logging

# Add common folder into the sys path for module importing
sys.path.append("../../Common")
sys.path.append("..")
import commonFns
import commonAntiMalwareFns
# Import CommonTest module into current namespace
from CommonTest import *

# Get testcase name
testcaseName = sys.argv[0][:-3]

class TestCase(BaseTest):
    def __init__(self):
        logging.info("TestcaseID : lsh-1881")
        logging.info("Description : Test the installation using EICAR.com test virus")
        self._filename = '/tmp/lsh-1881-eicar-test.txt'
        if len(sys.argv) > 2 and  sys.argv[2] :
            self._filename = sys.argv[2] + '/lsh-1881-eicar-test.txt'
        
    def init(self):
        logging.info("Initializing testcase %s" % testcaseName)
        # Call the common initialization check
        _retval = BaseTest.init(self)
        if _retval != 0 :
            return _retval
        if self._cleanup() != 0 :
            logging.error("Failed during initialization")
            return 1
        return 0

    def execute(self):
        logging.info("Executing testcase %s" % testcaseName)

        commonAntiMalwareFns.createEicarInfection(self._filename)
        return 0

    def verify(self):
        logging.info("Verifying testcase %s" % testcaseName)
        if os.path.exists(self._filename) :
            logging.error("File %s exist which should have got quarantined!")
            return 1
        logging.debug("Checking if file is quarantined")
        if not commonAntiMalwareFns.isFileQuarantined(self._filename) :
            logging.error("File is not quarantined")
            return 1
        return 0

    def cleanup(self):
        logging.info("Performing cleanup for testcase %s" % testcaseName)
        # Copy logs and clean them.
        foundCrash = 0
        foundCrash = commonFns.copyLogs()
        foundCrash = foundCrash + self._cleanup()
        commonFns.cleanLogs()

        if foundCrash != 0:
            logging.error("copylogs returned failure status.  Maybe a product crash")

        return foundCrash

    def _cleanup(self) :
        _retval = 0
        if not commonAntiMalwareFns.resetToDefaults() :
            logging.error("Failed to reset to defaults")
            _retval = 1
        if os.path.exists(self._filename) :
            os.remove(self._filename)
        return _retval

    def __del__(self):
        pass

if __name__ == "__main__":
    # Setup testcase
    setupTestcase(sys.argv)

    testObj = TestCase()

    # Perform testcase operations
    retVal = testObj.init()

    # Perform execute once initialization succeeds...    
    if(retVal == 0):
        retVal = testObj.execute()

    # Once execution succeeds, perform verification...
    if(retVal == 0):
        retVal = testObj.verify()

    # Perform testcase cleanup
    retVal = retVal + testObj.cleanup()

    if(retVal == 0):
        resultString = "PASS"
    else:
        resultString = "FAIL"
        
    logging.info("Result of testcase %s: %s" % (testcaseName, resultString) )
    sys.exit(retVal)
