#!/usr/bin/python
# Copyright (C) 2010 McAfee, Inc.  All rights reserved.
# TestcaseID: 9342
# TestcaseDescription: Verify that AV+AS detects infected files downloaded from http site

import sys
import logging
import time
import subprocess
import tempfile
import os

# Import CommonTest module into current namespace
common_path=os.path.dirname(os.path.abspath(sys.argv[0])) 
sys.path.append(common_path + "/../../Common")
sys.path.append(common_path + "/../../AntiMalware")

import commonFns
import CommonOASFns
import CommonAntiMalwareFns
# Import CommonTest module into current namespace
from CommonTest import *

# Get testcase name
testcaseName = sys.argv[0][:-3]

class TestCase(BaseTest):
    _infectFilePath = common_path + "/data/OASInfect.1"
    _url = "http://www.eicar.org/download/eicar.com"
    def __init__(self):
        logging.info("TestcaseID : 9342")
        logging.info("Verify that AV+AS detects infected files downloaded from http site")

    def init(self):
        logging.info("Initializing testcase %s" % testcaseName)

        # Call the common initialization check
        _retval = BaseTest.init(self)
        if _retval != 0 :
            return _retvalse

        
        logging.debug("Installing AntiMalwareTestTool")
        if CommonAntiMalwareFns.installAntiMalwareTestTool() != True :
            logging.error("Failed to install AntiMalwareTestTool")
            return 1

        CommonOASFns.resetToDefaults()

        # Clear the Quarantine data
        CommonOASFns.clearQuarantine()

        return 0
    

    def execute(self):
        logging.info("Executing testcase %s" % testcaseName)
	
        # Disable OAS temporarily for performing few file operations...
        if CommonOASFns.enableOAS() != True:
            logging.error("Unable to enable OAS")
            return 1
	
        if CommonOASFns.setAVPrimaryAction('1') != True :
            logging.error("Unable to set AVPrimary Action")
            return 1
        if CommonOASFns.setAVSecondaryAction('3') != True:
            logging.error("Unable to set AVPrimary Action")
            return 1

        # Download the eicar.com file for execute testing...
        if commonFns.downloadFile(self._url, self._infectFilePath)!=False :
            logging.info("Downloading from " + self._url + " i  failed")
            return 0
        logging.info("Downloading eicar.com not succeeded")

	return 1

    def verify(self):
        # Check whether the infected files got quarantined properly...
        time.sleep(20)
            
        if os.path.exists(self._infectFilePath):
            logging.error("Infected file" + self._infectFilePath + "not quarantined which is not expected.")
            return 1

        if CommonOASFns.isFileQuarantined(self._infectFilePath) != True:
            logging.info("Infected file" + self._infectFilePath + "not quarantined which is not expected.")
            return 1
            
        logging.info("Infected file got quarantined as expected.")
 
        return 0
        

    def cleanup(self):
        logging.info("Performing cleanup for testcase %s" % testcaseName)
        # Copy logs.
        CommonOASFns.clearQuarantine()
        foundCrash = 0
        foundCrash = commonFns.copyLogs()
        CommonOASFns.resetToDefaults()
        # Clean the logs
        commonFns.cleanLogs()

        if foundCrash != 0:
            logging.error("copylogs returned failure status.  Maybe a product crash")

        return foundCrash

    def __del__(self):
        pass

if __name__ == "__main__":
    # Setup testcase
    setupTestcase(sys.argv)

    testObj = TestCase()

    # Perform testcase operations
    retVal = testObj.init()

    # Perform execute once initialization succeeds...
    if(retVal == 0):
        retVal = testObj.execute()

    # Once execution succeeds, perform verification...
    if(retVal == 0):
        retVal = testObj.verify()

    # Perform testcase cleanup
    retVal += testObj.cleanup()

    if(retVal == 0):
        resultString = "PASS"
    else:
        resultString = "FAIL"

    logging.info("Result of testcase %s: %s" % (testcaseName, resultString) )
    sys.exit(retVal)
